{"version":3,"sources":["styles/globalStyles.js","components/Haeder/Header.js","vendor/fonts/SourceCodePro-Regular.woff","vendor/fonts/SourceCodePro-Regular.woff2","vendor/fonts/fonts.js","components/SearchForm/SearchForm.js","images/like.svg","components/Card/Card.js","components/SearchResult/SearchResult.js","utils/unsplashApi.js","utils/utils.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["GlobalStyle","createGlobalStyle","normalize","Header","HeaderWrapper","TitleLink","href","styled","header","a","GlobalFonts","SourceCodeProWoff2","SourceCodeProWoff","SearchForm","valueInput","handleInput","handleSubmitInput","isErrMsg","Wrapper","Form","onSubmit","e","preventDefault","Input","placeholder","value","onChange","target","Button","type","aria-label","ErrorMessage","div","form","input","button","span","Card","image","description","likes","user","userImage","userLink","ImgCard","alt","src","DescriptionCard","InfoCardContainer","ImgCardContainer","Like","TextCardContainer","RightInfoCardContainer","UserImgCardContainer","LinkCardContainer","li","img","p","SearchResult","imagesCards","setPage","dataLength","length","next","hasMore","loader","LoaderText","columnsCountBreakPoints","350","750","1000","gutter","map","card","urls","small","first_name","profile_image","links","html","id","section","URL","KEY","COUNT","getPhotos","query","page","fetch","response","ok","json","photos","results","Promise","reject","error","status","getStartRandomPhotos","App","useState","valueSearch","setValueSearch","imageCards","setImageCards","setErrMsg","isEmptyImages","setEmptyImages","useEffect","getRandomPhoto","getMoreQueryPhoto","images","console","getQueryPhoto","EmptyMessage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.13f67ec5.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\nimport normalize from 'styled-normalize';\n\nconst GlobalStyle = createGlobalStyle`\n\n${normalize};\nbody {\n    font-family: 'Source Code Pro', 'Courier New', monospace;\n    font-style: normal;\n    color: #000000;\n    min-width: 320px;\n  }\n`;\n\nexport default GlobalStyle;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Header = () => {\n  return (\n    <HeaderWrapper>\n      <TitleLink href=\"/\">home</TitleLink>\n    </HeaderWrapper>\n  );\n};\n\nexport default Header;\n\nconst HeaderWrapper = styled.header``;\nconst TitleLink = styled.a`\n  font-weight: normal;\n  font-size: 30px;\n  line-height: 38px;\n  text-decoration: none;\n  color: #000000;\n`;\n","export default __webpack_public_path__ + \"static/media/SourceCodePro-Regular.a551956d.woff\";","export default __webpack_public_path__ + \"static/media/SourceCodePro-Regular.277a94f3.woff2\";","import { createGlobalStyle } from 'styled-components';\n\nimport SourceCodeProWoff from './SourceCodePro-Regular.woff';\nimport SourceCodeProWoff2 from './SourceCodePro-Regular.woff2';\n\nconst GlobalFonts = createGlobalStyle`\n    @font-face {\n      font-family: 'Source Code Pro';\n        src: local('Source Code Pro'), local('SourceCodePro'),\n        url(${SourceCodeProWoff2}) format('woff2'),\n        url(${SourceCodeProWoff}) format('woff');\n        font-weight: 400;\n        font-display: swap;\n        font-style: normal;\n    }\n`;\n\nexport default GlobalFonts;\n","import React from 'react';\nimport styled from 'styled-components/macro';\n\nconst SearchForm = ({\n  valueInput,\n  handleInput,\n  handleSubmitInput,\n  isErrMsg,\n}) => {\n  const handleChange = (e) => {\n    handleInput(e.target.value);\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    handleSubmitInput();\n  };\n\n  return (\n    <Wrapper>\n      <Form onSubmit={handleSubmit}>\n        <Input\n          placeholder=\"search images\"\n          value={valueInput}\n          onChange={handleChange}\n        ></Input>\n        <Button type=\"submit\" aria-label=\"search photos\">\n          search\n        </Button>\n      </Form>\n      {isErrMsg && <ErrorMessage>you must enter a search query</ErrorMessage>}\n    </Wrapper>\n  );\n};\n\nexport default SearchForm;\n\nconst Wrapper = styled.div``;\nconst Form = styled.form`\n  position: relative;\n  border: 1px solid #000000;\n  border-radius: 10px;\n  max-width: 745px;\n  display: flex;\n  box-sizing: border-box;\n  padding: 4px;\n`;\n\nconst Input = styled.input`\n  border: none;\n  box-sizing: border-box;\n  border-radius: 10px;\n  height: 52px;\n  padding: 10px;\n  width: 75%;\n  font-size: 34px;\n  line-height: 43px;\n  color: #000000;\n\n  ::placeholder {\n    font-size: 34px;\n    text-align: center;\n    color: #000000;\n  }\n\n  @media screen and (max-width: 500px) {\n    font-size: 20px;\n\n    ::placeholder {\n      font-size: 20px;\n    }\n  }\n`;\n\nconst Button = styled.button`\n  color: #ffffff;\n  background: #000000;\n  border-radius: 10px;\n  font-size: 30px;\n  text-align: center;\n  border: none;\n  padding: 4px 8px;\n  box-sizing: border-box;\n  cursor: pointer;\n  margin-left: auto;\n\n  @media screen and (max-width: 500px) {\n    font-size: 20px;\n  }\n`;\n\nconst ErrorMessage = styled.span`\n  color: red;\n`;\n","export default __webpack_public_path__ + \"static/media/like.2c20196c.svg\";","import React from 'react';\nimport styled from 'styled-components/macro';\nimport Like from '../../images/like.svg';\n\nconst Card = ({ image, description, likes, user, userImage, userLink }) => {\n  return (\n    <Wrapper>\n      <ImgCard alt={description} src={image}></ImgCard>\n      <DescriptionCard>\n        <InfoCardContainer>\n          <ImgCardContainer alt=\"like count\" src={Like} />\n          <TextCardContainer>{likes}</TextCardContainer>\n        </InfoCardContainer>\n        <RightInfoCardContainer>\n          <UserImgCardContainer alt=\"user avatar\" src={userImage} />\n          <LinkCardContainer target=\"_blank\" href={userLink}>\n            {user}\n          </LinkCardContainer>\n        </RightInfoCardContainer>\n      </DescriptionCard>\n    </Wrapper>\n  );\n};\n\nexport default Card;\n\nconst Wrapper = styled.li`\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;\n\nconst ImgCard = styled.img`\n  width: 100%;\n`;\n\nconst DescriptionCard = styled.div`\n  display: flex;\n  justify-content: space-between;\n  border: 1px solid #d1d1d1;\n  box-sizing: border-box;\n  padding: 20px 16px;\n\n  @media screen and (max-width: 400px) {\n    padding: 12px 10px;\n  }\n`;\n\nconst InfoCardContainer = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nconst RightInfoCardContainer = styled(InfoCardContainer)`\n  flex-direction: row-reverse;\n`;\n\nconst ImgCardContainer = styled.img`\n  width: 32px;\n  height: 32px;\n`;\n\nconst UserImgCardContainer = styled(ImgCardContainer)`\n  border-radius: 100%;\n`;\n\nconst TextCardContainer = styled.p`\n  font-size: 24px;\n  line-height: 30px;\n  color: #000000;\n  padding: 0;\n  margin: 0;\n\n  @media screen and (max-width: 400px) {\n    font-size: 16px;\n  }\n`;\n\nconst LinkCardContainer = styled.a`\n  font-size: 24px;\n  line-height: 30px;\n  color: #000000;\n  text-decoration: none;\n  text-align: end;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n  max-width: 130px;\n\n  @media screen and (max-width: 1000px) {\n    max-width: 200px;\n  }\n\n  @media screen and (max-width: 400px) {\n    font-size: 16px;\n    max-width: 180px;\n  }\n`;\n","import styled from 'styled-components/macro';\nimport Card from '../Card/Card';\nimport Masonry, { ResponsiveMasonry } from 'react-responsive-masonry';\nimport InfiniteScroll from 'react-infinite-scroll-component';\n\nimport './SearchResult.css';\nconst SearchResult = ({ imagesCards = [], setPage }) => {\n  return (\n    <Wrapper>\n      <InfiniteScroll\n        dataLength={imagesCards.length}\n        next={() => setPage()}\n        hasMore={true}\n        loader={\n          imagesCards.length === 30 ? (\n            ''\n          ) : (\n            <LoaderText>loading image...⏳</LoaderText>\n          )\n        }\n      >\n        <ResponsiveMasonry\n          columnsCountBreakPoints={{ 350: 1, 750: 2, 1000: 3 }}\n        >\n          <Masonry gutter=\"25px\">\n            {imagesCards.map((card) => (\n              <Card\n                description={card.description}\n                key={card.id}\n                image={card.urls.small}\n                likes={card.likes}\n                user={card.user.first_name}\n                userImage={card.user.profile_image.small}\n                userLink={card.user.links.html}\n              ></Card>\n            ))}\n          </Masonry>\n        </ResponsiveMasonry>\n      </InfiniteScroll>\n    </Wrapper>\n  );\n};\n\nexport default SearchResult;\n\nconst Wrapper = styled.section``;\n\nconst LoaderText = styled.p`\n  font-size: 30px;\n  text-align: center;\n`;\n","import { API_CONFIG } from './utils';\n\nconst { URL, KEY, COUNT } = API_CONFIG;\n\nexport const getPhotos = async (query, page) => {\n  let response = await fetch(\n    `${URL}/search/photos?query=${query}&page=${page}&client_id=${KEY}`\n  );\n  if (response.ok) {\n    let photos = await response.json();\n    return photos.results;\n  } else {\n    return Promise.reject({\n      error: response.status,\n    });\n  }\n};\n\nexport const getStartRandomPhotos = async () => {\n  let response = await fetch(\n    `${URL}/photos/random?content_filter=low&count=${COUNT}&client_id=${KEY}`\n  );\n  if (response.ok) {\n    return response.json();\n  } else {\n    return Promise.reject({\n      error: response.status,\n    });\n  }\n};\n","export const API_CONFIG = {\n  URL: 'https://api.unsplash.com',\n  KEY: 'ts8MiXj2OczPOlc6EYMbJG1UVc5rnDI6dtbgay20nFA',\n  COUNT: 30,\n};\n","import styled from 'styled-components/macro';\nimport GlobalStyle from '../../styles/globalStyles';\nimport Header from '../Haeder/Header';\nimport GlobalFonts from '../../vendor/fonts/fonts';\nimport SearchForm from '../SearchForm/SearchForm';\nimport SearchResult from '../SearchResult/SearchResult';\nimport { useEffect, useState } from 'react';\nimport { getPhotos, getStartRandomPhotos } from '../../utils/unsplashApi';\n\nfunction App() {\n  const [valueSearch, setValueSearch] = useState('');\n  const [page, setPage] = useState(1);\n  const [imageCards, setImageCards] = useState([]);\n  const [isErrMsg, setErrMsg] = useState(false);\n  const [isEmptyImages, setEmptyImages] = useState(false);\n\n  useEffect(() => {\n    getRandomPhoto();\n  }, []);\n\n  useEffect(() => {\n    if (!valueSearch) return;\n    if (page > 1) getMoreQueryPhoto(valueSearch, page);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [page]);\n\n  const handleInputSearchForm = (value) => {\n    setValueSearch(value);\n  };\n\n  const handleSubmitSearch = () => {\n    if (valueSearch) {\n      getQueryPhoto();\n      setErrMsg(false);\n      setPage(1);\n    } else {\n      setErrMsg(true);\n    }\n  };\n\n  const getRandomPhoto = async () => {\n    try {\n      let images = await getStartRandomPhotos();\n      setImageCards(images);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const getMoreQueryPhoto = async () => {\n    try {\n      let images = await getPhotos(valueSearch, page);\n      setImageCards([...imageCards, ...images]);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const getQueryPhoto = async () => {\n    try {\n      let images = await getPhotos(valueSearch, 1);\n      if (images.length === 0) {\n        setEmptyImages(true);\n        return;\n      }\n      setEmptyImages(false);\n      setImageCards(images);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handlePage = () => {\n    if (!valueSearch) return;\n    setPage(page + 1);\n  };\n\n  return (\n    <Wrapper>\n      <Header />\n      <SearchForm\n        valueInput={valueSearch}\n        handleInput={handleInputSearchForm}\n        handleSubmitInput={handleSubmitSearch}\n        isErrMsg={isErrMsg}\n      />\n      {isEmptyImages ? (\n        <EmptyMessage>nothing found 😥</EmptyMessage>\n      ) : (\n        <SearchResult imagesCards={imageCards} setPage={handlePage} />\n      )}\n      <GlobalStyle />\n      <GlobalFonts />\n    </Wrapper>\n  );\n}\n\nexport default App;\n\nconst Wrapper = styled.div`\n  max-width: 1320px;\n  padding: 30px 20px;\n  box-sizing: border-box;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  gap: 25px;\n`;\n\nconst EmptyMessage = styled.p`\n  font-size: 30px;\n  text-align: center;\n`;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}